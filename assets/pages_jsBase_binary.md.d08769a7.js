import{_ as s,c as a,o as l,O as n}from"./chunks/framework.a45091be.js";const o="/handbook/assets/binary1.414db0b1.gif",p="/handbook/assets/binary2.1602194f.gif",e="/handbook/assets/binary3.0df874f1.gif",t="/handbook/assets/binary4.8db97d08.gif",c="/handbook/assets/10to2.135121bf.png",r="/handbook/assets/2to10.b41091fd.png",y="/handbook/assets/unsigned.e9460fa0.png",i="/handbook/assets/originalcode.d273da31.png",C="/handbook/assets/completation.9e6247c5.png",F="/handbook/assets/bumacunzai.fec19ef5.png",D="/handbook/assets/float1.f54cd1d2.png",A="/handbook/assets/float2.0f862f2a.png",x=JSON.parse('{"title":"二进制","description":"","frontmatter":{},"headers":[],"relativePath":"pages/jsBase/binary.md","lastUpdated":1695042895000}'),d={name:"pages/jsBase/binary.md"},h=n(`<h1 id="二进制" tabindex="-1">二进制 <a class="header-anchor" href="#二进制" aria-label="Permalink to &quot;二进制&quot;">​</a></h1><h2 id="位运算符" tabindex="-1">位运算符 <a class="header-anchor" href="#位运算符" aria-label="Permalink to &quot;位运算符&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">符号</th><th style="text-align:center;">描述</th><th style="text-align:center;">运算规则</th></tr></thead><tbody><tr><td style="text-align:center;">&amp;</td><td style="text-align:center;">与</td><td style="text-align:center;">两个位都为 1 时，结果才为 1</td></tr><tr><td style="text-align:center;">|</td><td style="text-align:center;">或</td><td style="text-align:center;">两个位都为 0 时，结果才为 0</td></tr><tr><td style="text-align:center;">^</td><td style="text-align:center;">异或</td><td style="text-align:center;">两个位相同为 0，相异为 1</td></tr><tr><td style="text-align:center;">~</td><td style="text-align:center;">取反</td><td style="text-align:center;">0 变 1，1 变 0</td></tr><tr><td style="text-align:center;">&lt;&lt;</td><td style="text-align:center;">左移</td><td style="text-align:center;">各二进位全部左移若干位，高位丢弃，低位补 0</td></tr><tr><td style="text-align:center;">&gt;&gt;</td><td style="text-align:center;">右移</td><td style="text-align:center;">各二进位全部右移若干位，低位丢弃，高位补 0</td></tr></tbody></table><h2 id="与运算-两个位都为-1-时-结果才为-1" tabindex="-1">&amp;与运算(两个位都为 1 时，结果才为 1 ) <a class="header-anchor" href="#与运算-两个位都为-1-时-结果才为-1" aria-label="Permalink to &quot;&amp;与运算(两个位都为 1 时，结果才为 1 )&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//  判断奇偶(如果最低位是1，则是偶数，后面都是2的倍数)</span></span>
<span class="line"><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 偶</span></span>
<span class="line"><span style="color:#F78C6C;">13</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 奇</span></span></code></pre></div><h2 id="或运算-两个位都为-0-时-结果才为-0" tabindex="-1">|或运算(两个位都为 0 时，结果才为 0) <a class="header-anchor" href="#或运算-两个位都为-0-时-结果才为-0" aria-label="Permalink to &quot;|或运算(两个位都为 0 时，结果才为 0)&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">|</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">|</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">|</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 或0取整</span></span>
<span class="line"><span style="color:#F78C6C;">100.11</span><span style="color:#89DDFF;">|</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">100</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 或自身等于自身</span></span>
<span class="line"><span style="color:#F78C6C;">235</span><span style="color:#89DDFF;">|</span><span style="color:#F78C6C;">235</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">235</span></span></code></pre></div><h2 id="异或运算-两个位相同为-0-相异为-1" tabindex="-1">^异或运算(两个位相同为 0，相异为 1) <a class="header-anchor" href="#异或运算-两个位相同为-0-相异为-1" aria-label="Permalink to &quot;^异或运算(两个位相同为 0，相异为 1)&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">^</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">^</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">^</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 异或自身等于0(归零律)</span></span>
<span class="line"><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">^</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 异或0等于自身(恒等律)</span></span>
<span class="line"><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">^</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">100</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 结合律</span></span>
<span class="line"><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">^</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">100</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 与顺序无关</span></span>
<span class="line"><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;">c</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 数据交换</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(a)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(b)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">[b</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">a]</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">[a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">b]</span></span></code></pre></div><h2 id="取反运算-0-变-1-1-变-0" tabindex="-1">~取反运算( 0 变 1，1 变 0) <a class="header-anchor" href="#取反运算-0-变-1-1-变-0" aria-label="Permalink to &quot;~取反运算( 0 变 1，1 变 0)&quot;">​</a></h2><ul><li>取反在减一</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">~</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;">~</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">~</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">=-</span><span style="color:#F78C6C;">6</span></span></code></pre></div><h2 id="位移运算" tabindex="-1">位移运算 <a class="header-anchor" href="#位移运算" aria-label="Permalink to &quot;位移运算&quot;">​</a></h2><ul><li>1、&lt;&lt; 左移</li><li>2、&gt;&gt;&gt;无符号右移</li><li>3、&gt;&gt;有符号位移</li></ul><h2 id="运算符" tabindex="-1">&quot;&lt;&lt;&quot;运算符 <a class="header-anchor" href="#运算符" aria-label="Permalink to &quot;&quot;&lt;&lt;&quot;运算符&quot;">​</a></h2><ul><li>运行原理：&quot;&lt;&lt;&quot;运算符执行<code>左移位运算</code>。在移位运算过程中，符号位始终保持不变。如果右侧空出位置，则自动填充为 0；超出 32 位的值，则自动丢弃。</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//20</span></span></code></pre></div><p><img src="`+o+'" alt="img"></p><h2 id="运算符-1" tabindex="-1">&quot;&gt;&gt;&quot;运算符 <a class="header-anchor" href="#运算符-1" aria-label="Permalink to &quot;&quot;&gt;&gt;&quot;运算符&quot;">​</a></h2><ul><li>运行原理:&quot;&gt;&gt;&quot;运算符执行有符号<code>右移位运算</code>。与左移运算操作相反，它把 32 位数字中的所有有效位整体右移，再使用符号位的值填充空位。移动过程中超出的值将被丢弃。</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">conosle</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1000</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//3</span></span></code></pre></div><p><img src="'+p+'" alt="img"></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1000</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//-4</span></span></code></pre></div><p><img src="'+e+`" alt="img"></p><h2 id="运算符-2" tabindex="-1">&quot;&gt;&gt;&gt;&quot;运算符 <a class="header-anchor" href="#运算符-2" aria-label="Permalink to &quot;&quot;&gt;&gt;&gt;&quot;运算符&quot;">​</a></h2><ul><li>运行原理:&quot;&gt;&gt;&gt;&quot;运算符执行五符号右移位运算。它把无符号的 32 位整数所有数位整体右移，<code>无符号右移与有符号右移运算的结果是相同的</code>。</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1000</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//返回值3</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1000</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//返回值3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1000</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//返回值 -4</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1000</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//返回值 16777212</span></span></code></pre></div><p><img src="`+t+`" alt="img"></p><h2 id="二进制权限控制" tabindex="-1">二进制权限控制 <a class="header-anchor" href="#二进制权限控制" aria-label="Permalink to &quot;二进制权限控制&quot;">​</a></h2><ul><li>假设我们需要设计一个读、写、执行三种权限，每一个可以任意组合，我们可以通过二进制来控制</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> r </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 1(读)</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> w </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 2(写)</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 4(执行)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 或(|)运用符,一个为1则为1</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> add </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> r </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> w </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> x</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 7(所有权限)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 给张三加读写权限</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> zhangsan </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> r </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> w</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(zhangsan </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> r)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(zhangsan </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> w)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 取消张三可读权限</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 异或两个位相同为 0</span></span>
<span class="line"><span style="color:#A6ACCD;">zhangsan </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> zhangsan </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> r</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(zhangsan </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> r)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="_0-1-0-2-0-3" tabindex="-1">0.1+0.2!=0.3 <a class="header-anchor" href="#_0-1-0-2-0-3" aria-label="Permalink to &quot;0.1+0.2!=0.3&quot;">​</a></h2><ul><li>1、因为在计算的时候十进制会转成二进制</li><li>2、小数在转化二进制的时候会乘 2，取出整数部分，有剩余的小数部分继续乘 2</li><li>3、0.1 / 0.2 转换的时候会进入死循环，尾数超过 52 位会被丢弃，导致计算不正确</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">0</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">1转化成二进制的算法：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">0.1</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0.2</span><span style="color:#89DDFF;">======</span><span style="color:#A6ACCD;">取出整数部分0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">0.2</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0.4</span><span style="color:#89DDFF;">======</span><span style="color:#A6ACCD;">取出整数部分0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">0.4</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0.8</span><span style="color:#89DDFF;">======</span><span style="color:#A6ACCD;">取出整数部分0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">0.8</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1.6</span><span style="color:#89DDFF;">======</span><span style="color:#A6ACCD;">取出整数部分1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">0.6</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1.2</span><span style="color:#89DDFF;">======</span><span style="color:#A6ACCD;">取出整数部分1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">0.2</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0.4</span><span style="color:#89DDFF;">======</span><span style="color:#A6ACCD;">取出整数部分0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">0.4</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0.8</span><span style="color:#89DDFF;">======</span><span style="color:#A6ACCD;">取出整数部分0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">0.8</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1.6</span><span style="color:#89DDFF;">======</span><span style="color:#A6ACCD;">取出整数部分1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">0.6</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1.2</span><span style="color:#89DDFF;">======</span><span style="color:#A6ACCD;">取出整数部分1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">接下来会无限循环</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">0.2</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0.4</span><span style="color:#89DDFF;">======</span><span style="color:#A6ACCD;">取出整数部分0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">0.4</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0.8</span><span style="color:#89DDFF;">======</span><span style="color:#A6ACCD;">取出整数部分0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">0.8</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1.6</span><span style="color:#89DDFF;">======</span><span style="color:#A6ACCD;">取出整数部分1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">0.6</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1.2</span><span style="color:#89DDFF;">======</span><span style="color:#A6ACCD;">取出整数部分1</span></span></code></pre></div><h2 id="_8进制转二进制" tabindex="-1">8进制转二进制 <a class="header-anchor" href="#_8进制转二进制" aria-label="Permalink to &quot;8进制转二进制&quot;">​</a></h2><ul><li>8进制0-7，0作为开头</li><li>一个八进制，占三位</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 八进制对应的二进制表现方式</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">016</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 001 110</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0123</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 001 010 011</span></span></code></pre></div><h2 id="_10进制转二进制" tabindex="-1">10进制转二进制 <a class="header-anchor" href="#_10进制转二进制" aria-label="Permalink to &quot;10进制转二进制&quot;">​</a></h2><ul><li>整数部分: 除 2 取余,直到商为 0,最先得到的余数是最低位,最后得到的余数是最高位.</li><li>小数部分: 乘 2 取整,直到积为 0 或者达到精度要求为止,最先得到的整数是高位</li><li>例如 (7.75)10=(111.11)2</li><li>高位在左，低位在右 <img src="`+c+`" alt="Alt"></li></ul><h2 id="_16进制转二进制" tabindex="-1">16进制转二进制 <a class="header-anchor" href="#_16进制转二进制" aria-label="Permalink to &quot;16进制转二进制&quot;">​</a></h2><ul><li>16进制0-9、字母A到F(或a~f)-&gt;10-15，0x作为开头</li><li>一个16进制，占四位</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 八进制对应的二进制表现方式</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0x1a</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 0001 1010</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0x1f</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 0001 1111</span></span></code></pre></div><h2 id="_2进制转8进制" tabindex="-1">2进制转8进制 <a class="header-anchor" href="#_2进制转8进制" aria-label="Permalink to &quot;2进制转8进制&quot;">​</a></h2><ul><li>三个位代表一个8进制</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">001110</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 001 110 =&gt; 016</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">001010011</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 001 010 011 =&gt; 0123</span></span></code></pre></div><h2 id="_2进制转10进制" tabindex="-1">2进制转10进制 <a class="header-anchor" href="#_2进制转10进制" aria-label="Permalink to &quot;2进制转10进制&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>负次计算: 一个数的负几次方就是这个数的几次方的倒数。 <ul><li>2的负1次方＝2的1次方分之一＝1／2</li><li>3的负2次方＝3的2次方分之一＝1／9</li><li>4的负2次方＝4的2次方分之一＝1／16</li></ul></li></ul></div><ul><li>方法: 按权展开,加权求和,以(111.11)2 为例 <img src="`+r+`" alt="Alt"></li></ul><h2 id="_2进制转16进制" tabindex="-1">2进制转16进制 <a class="header-anchor" href="#_2进制转16进制" aria-label="Permalink to &quot;2进制转16进制&quot;">​</a></h2><ul><li>四个位代表一个16进制</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">00011010</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 0001 1010 =&gt; 0x1a</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">00011111</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 0001 1111 =&gt; 0x1f</span></span></code></pre></div><h2 id="计算机中的数据" tabindex="-1">计算机中的数据 <a class="header-anchor" href="#计算机中的数据" aria-label="Permalink to &quot;计算机中的数据&quot;">​</a></h2><ul><li>一个字节有 8 位(11111111)二进制，一个 bit 等于一位(1)二进制， <blockquote><p>数据</p></blockquote></li><li>1、数值数据 <ul><li>无符号数据(没有正负符号为)</li><li>有符号数据(有正负符号为)0 为正，1 为负</li></ul></li><li>2、数值数据 <ul><li>文字</li><li>图像</li></ul></li></ul><h2 id="无符号数据的表示-原码" tabindex="-1">无符号数据的表示(原码) <a class="header-anchor" href="#无符号数据的表示-原码" aria-label="Permalink to &quot;无符号数据的表示(原码)&quot;">​</a></h2><ul><li>原码: 3 个 bit(111)能表示 8 个数 <code>0</code>、 <code>1</code> 、<code>2</code>、 <code>3</code>、 <code>4</code>、 <code>5</code> 、<code>6</code>、 <code>7</code><img src="`+y+'" alt="Alt"></li></ul><h2 id="有符号数据的表示-原码" tabindex="-1">有符号数据的表示(原码) <a class="header-anchor" href="#有符号数据的表示-原码" aria-label="Permalink to &quot;有符号数据的表示(原码)&quot;">​</a></h2><ul><li>原码: 3 个 bit 能表示 8 个数 <code>+0</code> 、<code>+1</code> 、<code>+2</code> 、<code>+3</code> 、<code>-0</code>、 <code>-1</code> 、<code>-2</code>、 <code>-3</code></li><li>符号: 用 <code>0</code>、<code>1</code> 表示<code>正</code>、<code>负</code>号,放在数值的最高位 <img src="'+i+'" alt="Alt"></li></ul><h2 id="有符号数据-反码" tabindex="-1">有符号数据(反码) <a class="header-anchor" href="#有符号数据-反码" aria-label="Permalink to &quot;有符号数据(反码)&quot;">​</a></h2><ul><li>反码:<code>正数不变</code>,<code>负数的除符号位外取反</code><img src="'+C+'" alt="Alt"></li></ul><h2 id="有符号数据-补码" tabindex="-1">有符号数据(补码) <a class="header-anchor" href="#有符号数据-补码" aria-label="Permalink to &quot;有符号数据(补码)&quot;">​</a></h2><ul><li>补码:<code>正数不变</code>,<code>负数在反码的基础上加 1</code><img src="'+F+`" alt="Alt"></li></ul><h2 id="原码、反码、补码" tabindex="-1">原码、反码、补码 <a class="header-anchor" href="#原码、反码、补码" aria-label="Permalink to &quot;原码、反码、补码&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>计算机里的数都是<code>补码</code>的形式</li></ul></div><ul><li><p>正数的补码、反码和原码一样</p><ul><li>例如：7</li><li>原码：0111</li><li>反码：0111</li><li>补码：0111</li></ul></li><li><p>负数：通过<code>原码求补码</code>的转换方法：<code>符号位不变</code>，<code>每个数值位求反</code>(反码)，<code>末位加 1</code></p><ul><li>例如：-7</li><li>转为二进制原码：1111</li><li>从原码转为反码：1000</li><li>从反码转为补码：1001</li></ul></li></ul><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">unsigned</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">char</span><span style="color:#F07178;"> ch</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 计算机都是以补码的形式计算</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 00000001 // 原码</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 11111110 // 反码(原码取反)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 11111111 // 补码(反码+1)</span></span>
<span class="line"><span style="color:#F07178;">    ch </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ch=%d %c</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> ch</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> ch</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 255 %c ASCII 没有对应的255所以是乱码</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="ieee754标准" tabindex="-1">IEEE754标准 <a class="header-anchor" href="#ieee754标准" aria-label="Permalink to &quot;IEEE754标准&quot;">​</a></h2><ul><li>JavaScript采用的是双精度(64位)</li><li><code>符号位</code>决定了一个数的<code>正负</code>,<code>指数</code>部分决定了<code>数值的大小</code>,<code>小数</code>有效位部分决定了<code>数值的精度</code></li><li>一个数在 JavaScript 内部实际的表示形式 (-1)符号位1.有效位2指数位</li><li>精度最多53个二进制位, -(253-1)到253-1</li><li>指数部分最大值是 2017(211-1),分一半表示负数,JavaScript能够表示的数值范围是21024~2-10</li></ul><p><img src="`+D+'" alt="Alt"><img src="'+A+'" alt="Alt"></p>',68),u=[h];function g(b,m,f,q,E,_){return l(),a("div",null,u)}const v=s(d,[["render",g]]);export{x as __pageData,v as default};
