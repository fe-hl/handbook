import{_ as s,c as a,o as n,O as l}from"./chunks/framework.a45091be.js";const A=JSON.parse('{"title":"stripe支付体检优化","description":"","frontmatter":{},"headers":[],"relativePath":"pages/workReview/stripe.md","lastUpdated":1708507906000}'),o={name:"pages/workReview/stripe.md"},p=l(`<h1 id="stripe支付体检优化" tabindex="-1">stripe支付体检优化 <a class="header-anchor" href="#stripe支付体检优化" aria-label="Permalink to &quot;stripe支付体检优化&quot;">​</a></h1><h2 id="业务痛点" tabindex="-1">业务痛点 <a class="header-anchor" href="#业务痛点" aria-label="Permalink to &quot;业务痛点&quot;">​</a></h2><ul><li>三方支付采用的是stripe，支付时需要在Stripe页面完成支付，支付完成后用户再次回到当前页面，会导致当前页面的刷新，用户体验不好，甚至会中断用户的操作流程</li><li>利用BroadcastChannel跨页面通信解决了这个问题，满足了用户的支付需求，同时当前的操作页面不会刷新，用户体验更好</li></ul><h2 id="思路" tabindex="-1">思路 <a class="header-anchor" href="#思路" aria-label="Permalink to &quot;思路&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>BroadcastChannel同源策略下，可以浏览器跨页面通信</p></div><ul><li>1、通过<code>window.open(&#39;xxx&#39;, &#39;_blank&#39;)</code>,打开一个新的窗口方式，打开stripe支付链接</li><li>2、当前页面创建一个<code>BroadcastChannel</code>,监听<code>Message</code>消息</li><li>3、当支付完成后，stripe回跳指定的中间结果页面，通过<code>BroadcastChannel</code>,发送<code>postMessage</code>消息,并且通过<code> window.close()</code>关闭新窗口</li><li>4、用户还是停留在当前的页面，并且页面没有刷新</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// a页面</span></span>
<span class="line"><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">open</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">xxx</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">_blank</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> channel </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BroadcastChannel</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">openask-deposite</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">channel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">message</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">purchase-success</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">onSuccess</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// b页面</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> channel </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BroadcastChannel</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">openask-deposite</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">channel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">postMessage</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">purchase-success</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">setTimeout</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="broadcastchannel和postmessage区别" tabindex="-1">BroadcastChannel和postMessage区别 <a class="header-anchor" href="#broadcastchannel和postmessage区别" aria-label="Permalink to &quot;BroadcastChannel和postMessage区别&quot;">​</a></h2><ul><li>相同点：都可以实现跨页面通信</li><li>不同点： <ul><li>postMessage不受跨域的限制，点对点传递<code>一对一</code></li><li>BroadcastChannel必须同源策略下，类似广播传递<code>一对多</code></li></ul></li><li>适用场景：postMessage更加适合页面有父子关系的传输，比如内嵌入一个<code>iframe</code></li></ul>`,9),e=[p];function t(c,r,D,i,y,F){return n(),a("div",null,e)}const d=s(o,[["render",t]]);export{A as __pageData,d as default};
