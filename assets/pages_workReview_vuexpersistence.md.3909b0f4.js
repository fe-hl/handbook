import{_ as s,c as a,o as l,O as n}from"./chunks/framework.a45091be.js";const C=JSON.parse('{"title":"vuex 数据持久化","description":"","frontmatter":{},"headers":[],"relativePath":"pages/workReview/vuexpersistence.md","lastUpdated":1686925650000}'),o={name:"pages/workReview/vuexpersistence.md"},p=n(`<h1 id="vuex-数据持久化" tabindex="-1">vuex 数据持久化 <a class="header-anchor" href="#vuex-数据持久化" aria-label="Permalink to &quot;vuex 数据持久化&quot;">​</a></h1><h2 id="痛点" tabindex="-1">痛点 <a class="header-anchor" href="#痛点" aria-label="Permalink to &quot;痛点&quot;">​</a></h2><ul><li>用户的登录信息，一般情况下会存储在 vuex 中，可以实现跨组件通信</li><li>唯一的缺点就是，当用户在刷新页面的时候，vuex 中数据会全部初始化，导致登录信息丢失</li></ul><h2 id="设想" tabindex="-1">设想 <a class="header-anchor" href="#设想" aria-label="Permalink to &quot;设想&quot;">​</a></h2><ul><li>最开始的设想是每次在触发 mutations 的时候，手动的存储一份到 Storage，这个虽然可以实现但是需要人为的去干预，不太智能，就放弃了这个方案。利用 vuex 自定义 plugins 来实现</li></ul><h2 id="思路" tabindex="-1">思路 <a class="header-anchor" href="#思路" aria-label="Permalink to &quot;思路&quot;">​</a></h2><ul><li>1、vuex 插件机制是发布、订阅模式，在初始化时会执行plugins调用plugins中对函数，同时会传入 store 实例</li><li>2、当插件拿到 store 时，调用store实例的 subscribe 进行事件订阅</li><li>3、当通过 mutations 改变数据时，会触发subscribe订阅器执行，并且会传递 store 数据，这时会可以把store 数据存储在Storage</li><li>4、当页面被刷新时，vuex 插件会初始化，如果 Storage 中有数据，就执行 store.replaceState 替换 store 数据</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">statePersistence</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">store</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">localState</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">sessionStorage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getItem</span><span style="color:#F07178;">( </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">VUEX_STATE</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> ( </span><span style="color:#A6ACCD;">localState</span><span style="color:#F07178;"> ) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// store.replaceState( JSON.parse( localState ) );</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">store</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replaceState</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#82AAFF;">toRaw</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">store</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">state</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">localState</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">store</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">subscribe</span><span style="color:#F07178;">( </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">state</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">sessionStorage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setItem</span><span style="color:#F07178;">( </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">VUEX_STATE</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#F07178;">( </span><span style="color:#A6ACCD;">state</span><span style="color:#F07178;"> ) )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> )</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> store </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createStore</span><span style="color:#A6ACCD;">( </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [ statePersistence ]</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">....</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="问题与思考" tabindex="-1">问题与思考 <a class="header-anchor" href="#问题与思考" aria-label="Permalink to &quot;问题与思考&quot;">​</a></h2><ul><li><p>问题？</p><ul><li>同事加了一个新的store模块，直接刷新页面时，取新模块State数据报错，找不到该模块</li></ul></li><li><p>原因</p><ul><li>我们自己写了一个vuex持久化插件，当页面刷新的时候，我们会把持久化的数据，去替换Root.State</li><li>由于是新的模块，此时又没有新的<code>mutations</code>提交，导致持久化的时候没有存储新的模块，直接取值会导致找不到该模块</li></ul></li><li><p>思考</p><ul><li>页面在刷新的时候，获取到新的State，和持久化的State数据，进行合并</li></ul></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#A6ACCD;">store</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replaceState</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...</span><span style="color:#82AAFF;">toRaw</span><span style="color:#A6ACCD;">(store</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">state)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">(localState) </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ...</span></span></code></pre></div>`,11),e=[p];function t(c,r,F,y,D,i){return l(),a("div",null,e)}const u=s(o,[["render",t]]);export{C as __pageData,u as default};
