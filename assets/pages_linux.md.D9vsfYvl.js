import{_ as l,c as i,ao as e,o}from"./chunks/framework.BbYUXk_8.js";const p=JSON.parse('{"title":"linux","description":"","frontmatter":{},"headers":[],"relativePath":"pages/linux.md","filePath":"pages/linux.md","lastUpdated":1677033936000}'),t={name:"pages/linux.md"};function r(s,a,n,d,h,u){return o(),i("div",null,a[0]||(a[0]=[e(`<h1 id="linux" tabindex="-1">linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;linux&quot;">​</a></h1><h2 id="yum源替换" tabindex="-1">yum源替换 <a class="header-anchor" href="#yum源替换" aria-label="Permalink to &quot;yum源替换&quot;">​</a></h2><ul><li><p>1、进入<code>/etc/yum.repos.d/</code>目录</p></li><li><p>2、用wget下载repo文件</p><blockquote><p>输入命令wget <a href="http://mirrors.aliyun.com/repo/Centos-7.repo" target="_blank" rel="noreferrer">http://mirrors.aliyun.com/repo/Centos-7.repo</a></p></blockquote><blockquote><p>如果wget命令不生效，说明还没有安装wget工具，输入yum -y install wget 回车进行安装。</p></blockquote><blockquote><p>当前目录是/etc/yum.repos.d/，刚刚下载的Centos-7.repo也在这个目录上</p></blockquote></li><li><p>3、备份系统原来的repo文件<code>mv CentOs-Base.repo CentOs-Base.repo.bak</code></p></li><li><p>4、替换系统原理的repo文件<code>mv Centos-7.repo CentOs-Base.repo</code></p></li><li><p>5、执行yum源更新命令<code>yum clean all</code>、<code>yum makecache</code>、<code>yum update</code></p></li></ul><h2 id="防火墙配置" tabindex="-1">防火墙配置 <a class="header-anchor" href="#防火墙配置" aria-label="Permalink to &quot;防火墙配置&quot;">​</a></h2><ul><li>查看防火墙的状态<code>firewall-cmd --state</code></li><li>开启防火墙<code>systemctl start firewalld.service</code></li><li>开启端口<code>firewall-cmd --zone=public --add-port=8080/tcp --permanent</code></li><li>重启防火墙<code>systemctl restart firewalld.service</code></li><li>重载配置<code>firewall-cmd --reload</code></li></ul><h2 id="linux日常操作命令" tabindex="-1">linux日常操作命令 <a class="header-anchor" href="#linux日常操作命令" aria-label="Permalink to &quot;linux日常操作命令&quot;">​</a></h2><ul><li>查看当前所在的工作目录<code>pwd</code></li><li>查看当前系统的时间<code>date</code></li><li>查看有谁在线<code>who</code> 查看最近的登陆历史记录<code>last</code></li></ul><h2 id="文件系统操作" tabindex="-1">文件系统操作 <a class="header-anchor" href="#文件系统操作" aria-label="Permalink to &quot;文件系统操作&quot;">​</a></h2><ul><li>ls / 查看根目录下的子节点（文件夹和文件）信息</li><li>ls -al -a是显示隐藏文件 -l是以更详细的列表形式显示</li></ul><h3 id="创建文件夹" tabindex="-1">创建文件夹 <a class="header-anchor" href="#创建文件夹" aria-label="Permalink to &quot;创建文件夹&quot;">​</a></h3><ul><li>mkdir aaa 这是相对路径的写法</li><li>mkdir -p aaa/bbb/ccc</li><li>mkdir /data 这是绝对路径的写法</li></ul><h3 id="删除文件夹" tabindex="-1">删除文件夹 <a class="header-anchor" href="#删除文件夹" aria-label="Permalink to &quot;删除文件夹&quot;">​</a></h3><ul><li>rmdir 可以删除空目录</li><li>rm -r aaa 可以把aaa整个文件夹及其中的所有子节点全部删除</li><li>rm -rf aaa 强制删除aaa</li></ul><h3 id="修改文件夹名称" tabindex="-1">修改文件夹名称 <a class="header-anchor" href="#修改文件夹名称" aria-label="Permalink to &quot;修改文件夹名称&quot;">​</a></h3><ul><li>mv aaa angelababy</li></ul><h3 id="创建文件" tabindex="-1">创建文件 <a class="header-anchor" href="#创建文件" aria-label="Permalink to &quot;创建文件&quot;">​</a></h3><ul><li>touch somefile.1 创建一个空文件</li><li>echo &quot;i miss you,my baby&quot; &gt; somefile.2 利用重定向“&gt;”的功能，将一条指令的输出结果写入到一个文件中，会覆盖原文件内容</li><li>echo &quot;huangxiaoming ,gun dan&quot; &gt;&gt; somefile.2 将一条指令的输出结果追加到一个文件中，不会覆盖原文件内容</li></ul><h3 id="拷贝文件" tabindex="-1">拷贝文件 <a class="header-anchor" href="#拷贝文件" aria-label="Permalink to &quot;拷贝文件&quot;">​</a></h3><p>cp somefile.1 /home/hadoop/</p><h2 id="用vi文本编辑器来编辑生成文件" tabindex="-1">用vi文本编辑器来编辑生成文件 <a class="header-anchor" href="#用vi文本编辑器来编辑生成文件" aria-label="Permalink to &quot;用vi文本编辑器来编辑生成文件&quot;">​</a></h2><ul><li>vi somefile.4</li><li>1、首先会进入“一般模式”，此模式只接受各种快捷键，不能编辑文件内容</li><li>2、按i键，就会从一般模式进入编辑模式，此模式下，敲入的都是文件内容</li><li>3、编辑完成之后，按Esc键退出编辑模式，回到一般模式；</li><li>4、再按：，进入“底行命令模式”，输入wq命令，回车即可</li></ul><h2 id="用vi常用快捷键" tabindex="-1">用vi常用快捷键 <a class="header-anchor" href="#用vi常用快捷键" aria-label="Permalink to &quot;用vi常用快捷键&quot;">​</a></h2><ul><li><p>a 在光标后一位开始插入</p></li><li><p>A 在该行的最后插入</p></li><li><p>I 在该行的最前面插入</p></li><li><p>gg 直接跳到文件的首行</p></li><li><p>G 直接跳到文件的末行</p></li><li><p>dd 删除行，如果 5dd ，则一次性删除光标后的5行</p></li><li><p>yy 复制当前行, 复制多行，则 3yy，则复制当前行附近的3行</p></li><li><p>p 粘贴</p></li><li><p>v 进入字符选择模式，选择完成后，按y复制，按p粘贴</p></li><li><p>ctrl+v 进入块选择模式，选择完成后，按y复制，按p粘贴</p></li><li><p>shift+v 进入行选择模式，选择完成后，按y复制，按p粘贴</p></li><li><p>查找并替换（在底行命令模式中输入）</p><blockquote><p>%s/sad/88888888888888 效果：查找文件中所有sad，替换为88888888888888</p></blockquote><blockquote><p>/you 效果：查找文件中出现的you，并定位到第一个找到的地方，按n可以定位到下一个匹配位置（按N定位到上一个）</p></blockquote></li></ul><h2 id="查看文件内容" tabindex="-1">查看文件内容 <a class="header-anchor" href="#查看文件内容" aria-label="Permalink to &quot;查看文件内容&quot;">​</a></h2><ul><li>cat somefile 一次性将文件内容全部输出（控制台）</li><li>more somefile 可以翻页查看, 下翻一页(空格) 上翻一页（b） 退出（q）</li><li>less somefile 可以翻页查看,下翻一页(空格) 上翻一页（b），上翻一行(↑) 下翻一行（↓） 可以搜索关键字（/keyword）</li><li>tail -10 install.log 查看文件尾部的10行</li><li>tail -f install.log 小f跟踪文件的唯一inode号，就算文件改名后，还是跟踪原来这个inode表示的文件</li><li>tail -F install.log 大F按照文件名来跟踪</li><li>head -10 install.log 查看文件头部的10行</li></ul><h2 id="文件权限的操作" tabindex="-1">文件权限的操作 <a class="header-anchor" href="#文件权限的操作" aria-label="Permalink to &quot;文件权限的操作&quot;">​</a></h2><ul><li>linux文件权限的描述格式解读</li><li>drwxr-xr-x （也可以用二进制表示 111 101 101 --&gt; 755）</li><li>r=4、w=2、x=1</li><li>d：标识节点类型（d：文件夹 -：文件 l:链接）</li><li>r：可读 w：可写 x：可执行</li><li>第一组rwx： 表示这个文件的拥有者对它的权限：可读可写可执行</li><li>第二组r-x： 表示这个文件的所属组对它的权限：可读，不可写，可执行</li><li>第三组r-x： 表示这个文件的其他用户（相对于上面两类用户）对它的权限：可读，不可写，可执行</li></ul><h2 id="修改文件权限" tabindex="-1">修改文件权限 <a class="header-anchor" href="#修改文件权限" aria-label="Permalink to &quot;修改文件权限&quot;">​</a></h2><ul><li>u 代表用户</li><li>g 代表用户组</li><li>o 代表其他</li><li>a 代表所有</li><li>chmod g-rw haha.dat 表示将haha.dat对所属组的rw权限取消</li><li>chmod o-rw haha.dat 表示将haha.dat对其他人的rw权限取消</li><li>chmod u+x haha.dat 表示将haha.dat对所属用户的权限增加x</li></ul><h3 id="也可以用数字的方式来修改权限" tabindex="-1">也可以用数字的方式来修改权限 <a class="header-anchor" href="#也可以用数字的方式来修改权限" aria-label="Permalink to &quot;也可以用数字的方式来修改权限&quot;">​</a></h3><ul><li>chmod 664 haha.dat</li><li>就会修改成 rw-rw-r--</li></ul><h2 id="如果要将一个文件夹的所有内容权限统一修改-则可以-r参数" tabindex="-1">如果要将一个文件夹的所有内容权限统一修改，则可以-R参数 <a class="header-anchor" href="#如果要将一个文件夹的所有内容权限统一修改-则可以-r参数" aria-label="Permalink to &quot;如果要将一个文件夹的所有内容权限统一修改，则可以-R参数&quot;">​</a></h2><ul><li>chmod -R 770 aaa/</li><li>chown angela:angela aaa/ &lt;只有root能执行&gt;</li></ul><h2 id="添加用户" tabindex="-1">添加用户 <a class="header-anchor" href="#添加用户" aria-label="Permalink to &quot;添加用户&quot;">​</a></h2><ul><li>useradd angela</li></ul><h2 id="修改密码才能登陆" tabindex="-1">修改密码才能登陆 <a class="header-anchor" href="#修改密码才能登陆" aria-label="Permalink to &quot;修改密码才能登陆&quot;">​</a></h2><ul><li>passwd angela 按提示输入密码即可</li></ul><h2 id="为用户配置sudo权限" tabindex="-1">为用户配置sudo权限 <a class="header-anchor" href="#为用户配置sudo权限" aria-label="Permalink to &quot;为用户配置sudo权限&quot;">​</a></h2><ul><li>用root编辑 vi /etc/sudoers</li><li>在文件的如下位置，为hadoop添加一行即可</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>root    ALL=(ALL)       ALL     </span></span>
<span class="line"><span>hadoop  ALL=(ALL)       ALL</span></span></code></pre></div><p>然后，hadoop用户就可以用sudo来执行系统级别的指令 [hadoop@shizhan ~]$ sudo useradd huangxiaoming 系统管理操作 查看主机名 hostname</p><h2 id="修改主机名-重启后无效" tabindex="-1">修改主机名(重启后无效) <a class="header-anchor" href="#修改主机名-重启后无效" aria-label="Permalink to &quot;修改主机名(重启后无效)&quot;">​</a></h2><ul><li>hostname hadoop</li></ul><h2 id="修改主机名-重启后永久生效" tabindex="-1">修改主机名(重启后永久生效) <a class="header-anchor" href="#修改主机名-重启后永久生效" aria-label="Permalink to &quot;修改主机名(重启后永久生效)&quot;">​</a></h2><ul><li>vi /ect/sysconfig/network</li></ul><h2 id="修改ip-重启后无效" tabindex="-1">修改IP(重启后无效) <a class="header-anchor" href="#修改ip-重启后无效" aria-label="Permalink to &quot;修改IP(重启后无效)&quot;">​</a></h2><ul><li>ifconfig eth0 192.168.12.22</li></ul><h2 id="修改ip-重启后永久生效" tabindex="-1">修改IP(重启后永久生效) <a class="header-anchor" href="#修改ip-重启后永久生效" aria-label="Permalink to &quot;修改IP(重启后永久生效)&quot;">​</a></h2><ul><li>vi /etc/sysconfig/network-scripts/ifcfg-eth0</li></ul><p>mount **** 挂载外部存储设备到文件系统中 mkdir /mnt/cdrom 创建一个目录，用来挂载 mount -t iso9660 -o ro /dev/cdrom /mnt/cdrom/ 将设备/dev/cdrom挂载到 挂载点 ： /mnt/cdrom中</p><p>umount umount /mnt/cdrom</p><h2 id="统计文件或文件夹的大小" tabindex="-1">统计文件或文件夹的大小 <a class="header-anchor" href="#统计文件或文件夹的大小" aria-label="Permalink to &quot;统计文件或文件夹的大小&quot;">​</a></h2><ul><li>du -sh /mnt/cdrom/Packages</li><li>df -h 查看磁盘的空间</li></ul><h2 id="关机" tabindex="-1">关机 <a class="header-anchor" href="#关机" aria-label="Permalink to &quot;关机&quot;">​</a></h2><ul><li>halt</li></ul><h2 id="重启" tabindex="-1">重启 <a class="header-anchor" href="#重启" aria-label="Permalink to &quot;重启&quot;">​</a></h2><ul><li>reboot</li></ul><h2 id="后台服务管理" tabindex="-1">后台服务管理 <a class="header-anchor" href="#后台服务管理" aria-label="Permalink to &quot;后台服务管理&quot;">​</a></h2><ul><li>service network status 查看指定服务的状态</li><li>service network stop 停止指定服务</li><li>service network start 启动指定服务</li><li>service network restart 重启指定服务</li><li>service --status-all 查看系统中所有的后台服务</li></ul><h2 id="设置后台服务的自启配置" tabindex="-1">设置后台服务的自启配置 <a class="header-anchor" href="#设置后台服务的自启配置" aria-label="Permalink to &quot;设置后台服务的自启配置&quot;">​</a></h2><ul><li>chkconfig 查看所有服务器自启配置</li><li>chkconfig iptables off 关掉指定服务的自动启动</li><li>chkconfig iptables on 开启指定服务的自动启动</li></ul><h2 id="系统启动级别管理" tabindex="-1">系统启动级别管理 <a class="header-anchor" href="#系统启动级别管理" aria-label="Permalink to &quot;系统启动级别管理&quot;">​</a></h2><ul><li>vi /etc/inittab</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Default runlevel. The runlevels used are:</span></span>
<span class="line"><span>#   0 - halt (Do NOT set initdefault to this)</span></span>
<span class="line"><span>#   1 - Single user mode</span></span>
<span class="line"><span>#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)</span></span>
<span class="line"><span>#   3 - Full multiuser mode</span></span>
<span class="line"><span>#   4 - unused</span></span>
<span class="line"><span>#   5 - X11</span></span>
<span class="line"><span>#   6 - reboot (Do NOT set initdefault to this)</span></span>
<span class="line"><span>#</span></span>
<span class="line"><span>id:3:initdefault:</span></span></code></pre></div>`,64)]))}const m=l(t,[["render",r]]);export{p as __pageData,m as default};
